select   order_line_part2.ol_number,  sum(order_line_part2.ol_quantity) as sum_qty,  sum(order_line_part2.ol_amount) as sum_amount,  avg(order_line_part2.ol_quantity) as avg_qty,  avg(order_line_part2.ol_amount) as avg_amount,  count(*) as count_order from order_line_part2 where order_line_part2.ol_delivery_d > '2024-10-28 17:00:00' group by order_line_part2.ol_number order by order_line_part2.ol_number
select su.supplier_part1.s_suppkey, su.supplier_part2.s_name, n.nation_part2.n_name, i.item_part1.i_id, i.item_part2.i_name, su.supplier_part2.s_address, su.supplier_part2.s_phone, su.supplier_part2.s_comment from item_part2 as i join stock_part2 as s on i.item_part1.i_id = s.stock_part2.s_i_id join supplier_part2 as su on mod((s.stock_part2.s_w_id * s.stock_part2.s_i_id), 10000) = su.supplier_part1.s_suppkey join nation_part2 as n on su.supplier_part2.s_nationkey = n.nation_part2.n_nationkey join region as r on n.nation_part2.n_regionkey = r.region_part1.r_regionkey join (select s_sub.stock_part2.s_i_id as m_i_id, min(s_sub.stock_part2.s_quantity) as m_s_quantity from stock_part2 as s_sub join supplier_part2 as su_sub on mod((s_sub.stock_part2.s_w_id * s_sub.stock_part2.s_i_id), 10000) = su_sub.supplier_part1.s_suppkey join nation_part2 as n_sub on su_sub.supplier_part2.s_nationkey = n_sub.nation_part2.n_nationkey join region as r_sub on n_sub.nation_part2.n_regionkey = r_sub.region_part1.r_regionkey where r_sub.region.r_name like 'europ%' group by s_sub.stock_part2.s_i_id) as m on i.item_part1.i_id = m.m_i_id and s.stock_part2.s_quantity = m.m_s_quantity where i.item_part2.i_data like '%b' and r.region.r_name like 'europ%' order by n.nation_part2.n_name, su.supplier_part2.s_name, i.item_part1.i_id
select   order_line_part2.ol_o_id, order_line_part2.ol_w_id, order_line_part2.ol_d_id,sum(order_line_part2.ol_amount) as revenue, orders_part2.o_entry_d from 	 customer_part2, new_order_part2, orders_part2, order_line_part2 where 	 customer_part2.c_state like 'a%' and customer_part2.c_id = orders_part2.o_c_id and customer_part2.c_w_id = orders_part2.o_w_id and customer_part2.c_d_id = orders_part2.o_d_id and new_order_part2.no_w_id = orders_part2.o_w_id and new_order_part2.no_d_id = orders_part2.o_d_id and new_order_part2.no_o_id = orders_part2.o_id and order_line_part2.ol_w_id = orders_part2.o_w_id and order_line_part2.ol_d_id = orders_part2.o_d_id and order_line_part2.ol_o_id = orders_part2.o_id and orders_part2.o_entry_d > '2024-10-28 17:00:00' group by order_line_part2.ol_o_id, order_line_part2.ol_w_id, order_line_part2.ol_d_id, orders_part2.o_entry_d order by revenue desc, orders_part2.o_entry_d
select o.orders.o_ol_cnt, count(*) as order_count from orders_part2,orders o join order_line_part2 ol on o.orders_part2.o_id = ol.order_line_part2.ol_o_id and o.orders_part2.o_w_id = ol.order_line_part2.ol_w_id and o.orders_part2.o_d_id = ol.order_line_part2.ol_d_id and ol.order_line_part2.ol_delivery_d >= o.orders_part2.o_entry_d where orders_part2.orders_part2.o_id = orders.orders_part2.o_id and orders_part2.orders_part2.o_d_id = orders.orders_part2.o_d_id and orders_part2.orders_part2.o_w_id = orders.orders_part2.o_w_id and  o.orders_part2.o_entry_d >= '2024-10-28 17:00:00' and o.orders_part2.o_entry_d < '2025-10-23 17:00:00' group by o.orders.o_ol_cnt order by o.orders.o_ol_cnt
select nation_part2.n_name,  sum(order_line_part2.ol_amount) as revenue from customer_part2, orders_part2, order_line_part2, stock_part2, supplier_part2, nation_part2, region where customer_part2.c_id = orders_part2.o_c_id  and customer_part2.c_w_id = orders_part2.o_w_id  and customer_part2.c_d_id = orders_part2.o_d_id  and order_line_part2.ol_o_id = orders_part2.o_id  and order_line_part2.ol_w_id = orders_part2.o_w_id  and order_line_part2.ol_d_id=orders_part2.o_d_id  and order_line_part2.ol_w_id = stock_part2.s_w_id  and order_line_part2.ol_i_id = stock_part2.s_i_id  and mod((stock_part2.s_w_id * stock_part2.s_i_id),10000) = supplier_part1.s_suppkey  and ascii(substr(customer_part2.c_state,1,1)) = supplier_part2.s_nationkey  and supplier_part2.s_nationkey = nation_part2.n_nationkey  and nation_part2.n_regionkey = region_part1.r_regionkey  and region.r_name = 'europe'  and orders_part2.o_entry_d >= '2024-10-28 17:00:00' group by nation_part2.n_name order by revenue desc
select sum(order_line_part2.ol_amount) as revenue from order_line_part2 where order_line_part2.ol_delivery_d >= '2024-10-23 17:00:00' and order_line_part2.ol_delivery_d < '2024-10-28 17:00:00' and order_line_part2.ol_quantity between 1 and 100000
select s.supplier_part2.s_nationkey as supp_nation,substr(c.customer_part2.c_state, 1, 1) as cust_nation,extract(year from o.orders_part2.o_entry_d) as l_year,sum(ol.order_line_part2.ol_amount) as revenue from order_line_part2 as ol join stock_part2 st on ol.order_line_part2.ol_supply_w_id = st.stock_part2.s_w_id and ol.order_line_part2.ol_i_id = st.stock_part2.s_i_id join orders_part2 o on ol.order_line_part2.ol_w_id = o.orders_part2.o_w_id and ol.order_line_part2.ol_d_id = o.orders_part2.o_d_id and ol.order_line_part2.ol_o_id = o.orders_part2.o_id join customer_part2 c on o.orders_part2.o_c_id = c.customer_part2.c_id and o.orders_part2.o_w_id = c.customer_part2.c_w_id and o.orders_part2.o_d_id = c.customer_part2.c_d_id join supplier_part2 s on mod((st.stock_part2.s_w_id * st.stock_part2.s_i_id), 10000) = s.supplier_part1.s_suppkey join nation_part2 n1 on s.supplier_part2.s_nationkey = n1.nation_part2.n_nationkey join nation_part2 n2 on ascii(substr(c.customer_part2.c_state, 1, 1)) = n2.nation_part2.n_nationkey where mod((st.stock_part2.s_w_id * st.stock_part2.s_i_id), 10000) = s.supplier_part1.s_suppkey and ((n1.nation_part2.n_name = 'germany' and n2.nation_part2.n_name = 'canada') or (n1.nation_part2.n_name = 'canada' and n2.nation_part2.n_name = 'germany')) and o.orders_part2.o_entry_d between '2024-10-28 17:00:00' and '2025-10-23 17:00:00' group by s.supplier_part2.s_nationkey,substr(c.customer_part2.c_state, 1, 1), extract(year from o.orders_part2.o_entry_d) order by s.supplier_part2.s_nationkey,cust_nation, l_year
select extract(year from orders_part2.o_entry_d) as l_year,sum(case when n2.nation_part2.n_name = 'germany' then order_line_part2.ol_amount else 0 end) / sum(order_line_part2.ol_amount) as mkt_share from	 item_part2, supplier_part2, stock_part2, order_line_part2, orders_part2, customer_part2, nation_part2 n1, nation_part2 n2, region where	 item_part1.i_id = stock_part2.s_i_id and order_line_part2.ol_i_id = stock_part2.s_i_id and order_line_part2.ol_supply_w_id = stock_part2.s_w_id and mod((stock_part2.s_w_id * stock_part2.s_i_id),10000) = supplier_part1.s_suppkey and order_line_part2.ol_w_id = orders_part2.o_w_id and order_line_part2.ol_d_id = orders_part2.o_d_id and order_line_part2.ol_o_id = orders_part2.o_id and customer_part2.c_id = orders_part2.o_c_id and customer_part2.c_w_id = orders_part2.o_w_id and customer_part2.c_d_id = orders_part2.o_d_id and n1.nation_part2.n_nationkey = ascii(substr(customer_part2.c_state,1,1)) and n1.nation_part2.n_regionkey = region_part1.r_regionkey and order_line_part2.ol_i_id < 1000 and region.r_name = 'europe' and supplier_part2.s_nationkey = n2.nation_part2.n_nationkey and orders_part2.o_entry_d between '2024-10-23 17:00:00' and '2024-10-28 17:00:00' and item_part2.i_data like '%b' and item_part1.i_id = order_line_part2.ol_i_id group by extract(year from orders_part2.o_entry_d) order by l_year
select	 nation_part2.n_name, extract(year from orders_part2.o_entry_d) as l_year, sum(order_line_part2.ol_amount) as sum_profit from	 item_part2, stock_part2, supplier_part2, order_line_part2, orders_part2, nation_part2 where	 order_line_part2.ol_i_id = stock_part2.s_i_id and order_line_part2.ol_supply_w_id = stock_part2.s_w_id and mod((stock_part2.s_w_id * stock_part2.s_i_id), 10000) = supplier_part1.s_suppkey and order_line_part2.ol_w_id = orders_part2.o_w_id and order_line_part2.ol_d_id = orders_part2.o_d_id and order_line_part2.ol_o_id = orders_part2.o_id and order_line_part2.ol_i_id = item_part1.i_id and supplier_part2.s_nationkey = nation_part2.n_nationkey and item_part2.i_data like '%bb' group by nation_part2.n_name, extract(year from orders_part2.o_entry_d) order by nation_part2.n_name, l_year desc
select	 customer_part2.c_id, customer_part2.c_last, sum(order_line_part2.ol_amount) as revenue, customer_part2.c_city, customer_part2.c_phone, nation_part2.n_name from	 customer_part2, orders_part2, order_line_part2, nation_part2 where	 customer_part2.c_id = orders_part2.o_c_id and customer_part2.c_w_id = orders_part2.o_w_id and customer_part2.c_d_id = orders_part2.o_d_id and order_line_part2.ol_w_id = orders_part2.o_w_id and order_line_part2.ol_d_id = orders_part2.o_d_id and order_line_part2.ol_o_id = orders_part2.o_id and orders_part2.o_entry_d >= '2024-10-28 17:00:00' and orders_part2.o_entry_d <= order_line_part2.ol_delivery_d and nation_part2.n_nationkey = ascii(substr(customer_part2.c_state,1,1)) group by customer_part2.c_id, customer_part2.c_last, customer_part2.c_city, customer_part2.c_phone, nation_part2.n_name order by revenue desc
select	 stock_part2.s_i_id, sum(stock_part2.s_order_cnt) as ordercount from	 stock_part2, supplier_part2, nation_part2 where	 mod((stock_part2.s_w_id * stock_part2.s_i_id),10000) = supplier_part1.s_suppkey and supplier_part2.s_nationkey = nation_part2.n_nationkey and nation_part2.n_name = 'germany' group by stock_part2.s_i_id having   sum(stock_part2.s_order_cnt) >(select sum(stock_part2.s_order_cnt) * 0.005 from stock_part2, supplier_part2, nation_part2 where mod((stock_part2.s_w_id * stock_part2.s_i_id),10000) = supplier_part1.s_suppkey and supplier_part2.s_nationkey = nation_part2.n_nationkey and nation_part2.n_name = 'germany') order by ordercount desc
select	 orders.o_ol_cnt, sum(case when orders_part2.o_carrier_id = 1 or orders_part2.o_carrier_id = 2 then 1 else 0 end) as high_line_count, sum(case when orders_part2.o_carrier_id <> 1 and orders_part2.o_carrier_id <> 2 then 1 else 0 end) as low_line_count from	 orders_part2,orders, order_line_part2 where orders_part2.orders_part2.o_id = orders.orders_part2.o_id and orders_part2.orders_part2.o_d_id = orders.orders_part2.o_d_id and orders_part2.orders_part2.o_w_id = orders.orders_part2.o_w_id and 	 order_line_part2.ol_w_id = orders_part2.o_w_id and order_line_part2.ol_d_id = orders_part2.o_d_id and order_line_part2.ol_o_id = orders_part2.o_id and orders_part2.o_entry_d <= order_line_part2.ol_delivery_d and order_line_part2.ol_delivery_d < '2025-10-23 17:00:00' group by orders.o_ol_cnt order by orders.o_ol_cnt
select c_count, count(*) as custdist from (select c.customer_part2.c_id, count(o.orders_part2.o_id) as c_count from customer_part2 c left join orders_part2 o on c.customer_part2.c_w_id = o.orders_part2.o_w_id and c.customer_part2.c_d_id = o.orders_part2.o_d_id and c.customer_part2.c_id = o.orders_part2.o_c_id and o.orders_part2.o_carrier_id > 8 group by c.customer_part2.c_id) as c_orders group by c_count order by custdist desc, c_count desc
select 100.00 * sum(case when i.item_part2.i_data like 'pr%' then ol.order_line_part2.ol_amount else 0 end) / nullif(sum(ol.order_line_part2.ol_amount), 0) as promo_revenue from order_line_part2 ol join item_part2 i on ol.order_line_part2.ol_i_id = i.item_part1.i_id where ol.order_line_part2.ol_delivery_d >= '2024-10-28 17:00:00' and ol.order_line_part2.ol_delivery_d < '2025-10-23 17:00:00'
with revenue as (select mod((st.stock_part2.s_w_id * st.stock_part2.s_i_id), 10000) as supplier_no,sum(ol.order_line_part2.ol_amount) as total_revenue from order_line_part2 ol join stock_part2 st on ol.order_line_part2.ol_i_id = st.stock_part2.s_i_id and ol.order_line_part2.ol_supply_w_id = st.stock_part2.s_w_id where ol.order_line_part2.ol_delivery_d >= '2024-10-28 17:00:00' group by mod((st.stock_part2.s_w_id * st.stock_part2.s_i_id), 10000))select s.supplier_part1.s_suppkey, s.supplier_part2.s_name, s.supplier_part2.s_address, s.supplier_part2.s_phone, r.total_revenue from supplier_part2 s join revenue r on s.supplier_part1.s_suppkey = r.supplier_no where r.total_revenue = (select max(total_revenue) from revenue) order by s.supplier_part1.s_suppkey
select i.item_part2.i_name,substr(i.item_part2.i_data, 1, 3) as brand,i.item_part2.i_price,count(distinct mod((st.stock_part2.s_w_id * st.stock_part2.s_i_id), 10000)) as supplier_cnt from stock_part2 st join item_part2 i on i.item_part1.i_id = st.stock_part2.s_i_id where i.item_part2.i_data not like 'zz%' and mod((st.stock_part2.s_w_id * st.stock_part2.s_i_id), 10000) not in (select s.supplier_part1.s_suppkey from supplier_part2 s where s.supplier_part2.s_comment like '%bad%') group by i.item_part2.i_name, substr(i.item_part2.i_data, 1, 3), i.item_part2.i_price order by supplier_cnt desc
select sum(ol.order_line_part2.ol_amount) / 2.0 as avg_yearly from order_line_part2 ol join (select i.item_part1.i_id, avg(ol.order_line_part2.ol_quantity) as a from order_line_part2 ol join item_part1 i on ol.order_line_part2.ol_i_id = i.item_part1.i_id group by i.item_part1.i_id) as t on ol.order_line_part2.ol_i_id = t.item_part1.i_id where ol.order_line_part2.ol_quantity < t.a
select	 customer_part2.c_last, customer_part2.c_id orders_part2.o_id, orders_part2.o_entry_d, orders.o_ol_cnt, sum(order_line_part2.ol_amount) from	 customer_part2, orders_part2,orders, order_line_part2 where orders_part2.orders_part2.o_id = orders.orders_part2.o_id and orders_part2.orders_part2.o_d_id = orders.orders_part2.o_d_id and orders_part2.orders_part2.o_w_id = orders.orders_part2.o_w_id and 	 customer_part2.c_id = orders_part2.o_c_id and customer_part2.c_w_id = orders_part2.o_w_id and customer_part2.c_d_id = orders_part2.o_d_id and order_line_part2.ol_w_id = orders_part2.o_w_id and order_line_part2.ol_d_id = orders_part2.o_d_id and order_line_part2.ol_o_id = orders_part2.o_id group by orders_part2.o_id, orders_part2.o_w_id, orders_part2.o_d_id, customer_part2.c_id, customer_part2.c_last, orders_part2.o_entry_d, orders.o_ol_cnt having	 sum(order_line_part2.ol_amount) > 200 order by sum(order_line_part2.ol_amount) desc, orders_part2.o_entry_d
select sum(ol.order_line_part2.ol_amount) as revenue from order_line_part2 ol join item_part2 i on ol.order_line_part2.ol_i_id = i.item_part1.i_id where ol.order_line_part2.ol_quantity >= 1 and ol.order_line_part2.ol_quantity <= 10 and i.item_part2.i_price between 1 and 400000 and ((i.item_part2.i_data like '%a' and ol.order_line_part2.ol_w_id in (1, 2, 3)) or (i.item_part2.i_data like '%b' and ol.order_line_part2.ol_w_id in (1, 2, 4)) or (i.item_part2.i_data like '%c' and ol.order_line_part2.ol_w_id in (1, 5, 3)))
select supplier_part2.s_name, supplier_part2.s_address from supplier_part2, nation_part2 where supplier_part1.s_suppkey in (select mod(s.stock_part2.s_i_id * s.stock_part2.s_w_id, 10000) from stock_part2 s join order_line_part2 ol on s.stock_part2.s_i_id = ol.order_line_part2.ol_i_id where s.stock_part2.s_i_id in (select i.item_part1.i_id from item_part2 i where i.item_part2.i_data like 'co%') and ol.order_line_part2.ol_delivery_d > '2024-10-28 17:00:00' group by s.stock_part2.s_i_id, s.stock_part2.s_w_id, s.stock_part2.s_quantity having 2 * s.stock_part2.s_quantity > sum(ol.order_line_part2.ol_quantity)) and supplier_part2.s_nationkey = nation_part2.n_nationkey and nation_part2.n_name = 'germany' order by supplier_part2.s_name
select s.supplier_part2.s_name, count(*) as numwait from supplier_part2 s join stock_part2 st on s.supplier_part1.s_suppkey = mod((st.stock_part2.s_w_id * st.stock_part2.s_i_id), 10000) join order_line_part2 l1 on l1.order_line_part2.ol_i_id = st.stock_part2.s_i_id and l1.order_line_part2.ol_w_id = st.stock_part2.s_w_id join orders_part2 o on l1.order_line_part2.ol_o_id = o.orders_part2.o_id join nation_part2 n on s.supplier_part2.s_nationkey = n.nation_part2.n_nationkey where l1.order_line_part2.ol_delivery_d > o.orders_part2.o_entry_d and not exists (select * from order_line_part2 l2 where l2.order_line_part2.ol_o_id = l1.order_line_part2.ol_o_id and l2.order_line_part2.ol_w_id = l1.order_line_part2.ol_w_id and l2.order_line_part2.ol_d_id = l1.order_line_part2.ol_d_id and l2.order_line_part2.ol_delivery_d > l1.order_line_part2.ol_delivery_d) and n.nation_part2.n_name = 'germany' group by s.supplier_part2.s_name order by numwait desc, s.supplier_part2.s_name
select substr(c.customer_part2.c_state, 1, 1) as country,count(*) as numcust, sum(c.customer_part2.c_balance) as totacctbal from customer_part2 c where substr(c.customer_part2.c_phone, 1, 1) in ('1', '2', '3', '4', '5', '6', '7') and c.customer_part2.c_balance > (select avg(c2.customer_part2.c_balance) from customer_part2 c2 where c2.customer_part2.c_balance > 0.00 and substr(c2.customer_part2.c_phone, 1, 1) in ('1', '2', '3', '4', '5', '6', '7'))and not exists (select * from orders_part2 o where o.orders_part2.o_c_id = c.customer_part2.c_id and o.orders_part2.o_w_id = c.customer_part2.c_w_id and o.orders_part2.o_d_id = c.customer_part2.c_d_id) group by substr(c.customer_part2.c_state, 1, 1) order by substr(c.customer_part2.c_state, 1, 1)
