select   ol_number,  sum(ol_quantity) as sum_qty,  sum(ol_amount) as sum_amount,  avg(ol_quantity) as avg_qty,  avg(ol_amount) as avg_amount,  count(*) as count_order from order_line_part2 where ol_delivery_d > '2024-10-28 17:00:00' group by ol_number order by ol_number;
select su.s_suppkey, su.s_name, n.n_name, i.i_id, i.i_name, su.s_address, su.s_phone, su.s_comment from item_part2 as i join stock_part2 as s on i.i_id = s.s_i_id join supplier_part2 as su on mod((s.s_w_id * s.s_i_id), 10000) = su.s_suppkey join nation_part2 as n on su.s_nationkey = n.n_nationkey join region_part1 as r on n.n_regionkey = r.r_regionkey join (select s_sub.s_i_id as m_i_id, min(s_sub.s_quantity) as m_s_quantity from stock_part2 as s_sub join supplier_part2 as su_sub on mod((s_sub.s_w_id * s_sub.s_i_id), 10000) = su_sub.s_suppkey join nation_part2 as n_sub on su_sub.s_nationkey = n_sub.n_nationkey join region_part1 as r_sub on n_sub.n_regionkey = r_sub.r_regionkey where r_sub.r_name like 'europ%' group by s_sub.s_i_id) as m on i.i_id = m.m_i_id and s.s_quantity = m.m_s_quantity where i.i_data like '%b' and r.r_name like 'europ%' order by n.n_name, su.s_name, i.i_id;
select   ol_o_id, ol_w_id, ol_d_id,sum(ol_amount) as revenue, o_entry_d from 	 customer_part2, new_order_part2, orders_part2, order_line_part2 where 	 c_state like 'a%' and c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and no_w_id = o_w_id and no_d_id = o_d_id and no_o_id = o_id and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and o_entry_d > '2024-10-28 17:00:00' group by ol_o_id, ol_w_id, ol_d_id, o_entry_d order by revenue desc, o_entry_d;
select o.o_ol_cnt, count(*) as order_count from orders_part2 o join order_line_part2 ol on o.o_id = ol.ol_o_id and o.o_w_id = ol.ol_w_id and o.o_d_id = ol.ol_d_id and ol.ol_delivery_d >= o.o_entry_d where o.o_entry_d >= '2024-10-28 17:00:00' and o.o_entry_d < '2025-10-23 17:00:00' group by o.o_ol_cnt order by o.o_ol_cnt;
select n_name,  sum(ol_amount) as revenue from customer_part2, orders_part2, order_line_part2, stock_part2, supplier_part2, nation_part2, region_part1 where c_id = o_c_id  and c_w_id = o_w_id  and c_d_id = o_d_id  and ol_o_id = o_id  and ol_w_id = o_w_id  and ol_d_id=o_d_id  and ol_w_id = s_w_id  and ol_i_id = s_i_id  and mod((s_w_id * s_i_id),10000) = s_suppkey  and ascii(substr(c_state,1,1)) = s_nationkey  and s_nationkey = n_nationkey  and n_regionkey = r_regionkey  and r_name = 'europe'  and o_entry_d >= '2024-10-28 17:00:00' group by n_name order by revenue desc;
select sum(ol_amount) as revenue from order_line_part2 where ol_delivery_d >= '2024-10-23 17:00:00' and ol_delivery_d < '2024-10-28 17:00:00' and ol_quantity between 1 and 100000;
select s.s_nationkey as supp_nation,substr(c.c_state, 1, 1) as cust_nation,extract(year from o.o_entry_d) as l_year,sum(ol.ol_amount) as revenue from order_line_part2 as ol join stock_part2 st on ol.ol_supply_w_id = st.s_w_id and ol.ol_i_id = st.s_i_id join orders_part2 o on ol.ol_w_id = o.o_w_id and ol.ol_d_id = o.o_d_id and ol.ol_o_id = o.o_id join customer_part2 c on o.o_c_id = c.c_id and o.o_w_id = c.c_w_id and o.o_d_id = c.c_d_id join supplier_part2 s on mod((st.s_w_id * st.s_i_id), 10000) = s.s_suppkey join nation_part2 n1 on s.s_nationkey = n1.n_nationkey join nation_part2 n2 on ascii(substr(c.c_state, 1, 1)) = n2.n_nationkey where mod((st.s_w_id * st.s_i_id), 10000) = s.s_suppkey and ((n1.n_name = 'germany' and n2.n_name = 'canada') or (n1.n_name = 'canada' and n2.n_name = 'germany')) and o.o_entry_d between '2024-10-28 17:00:00' and '2025-10-23 17:00:00' group by s.s_nationkey,substr(c.c_state, 1, 1), extract(year from o.o_entry_d) order by s.s_nationkey,cust_nation, l_year;
select extract(year from o_entry_d) as l_year,sum(case when n2.n_name = 'germany' then ol_amount else 0 end) / sum(ol_amount) as mkt_share from	 item_part2, supplier_part2, stock_part2, order_line_part2, orders_part2, customer_part2, nation_part2 n1, nation_part2 n2, region_part1 where	 i_id = s_i_id and ol_i_id = s_i_id and ol_supply_w_id = s_w_id and mod((s_w_id * s_i_id),10000) = s_suppkey and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and n1.n_nationkey = ascii(substr(c_state,1,1)) and n1.n_regionkey = r_regionkey and ol_i_id < 1000 and r_name = 'europe' and s_nationkey = n2.n_nationkey and o_entry_d between '2024-10-23 17:00:00' and '2024-10-28 17:00:00' and i_data like '%b' and i_id = ol_i_id group by extract(year from o_entry_d) order by l_year;
select	 n_name, extract(year from o_entry_d) as l_year, sum(ol_amount) as sum_profit from	 item_part2, stock_part2, supplier_part2, order_line_part2, orders_part2, nation_part2 where	 ol_i_id = s_i_id and ol_supply_w_id = s_w_id and mod((s_w_id * s_i_id), 10000) = s_suppkey and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and ol_i_id = i_id and s_nationkey = n_nationkey and i_data like '%bb' group by n_name, extract(year from o_entry_d) order by n_name, l_year desc;
select	 c_id, c_last, sum(ol_amount) as revenue, c_city, c_phone, n_name from	 customer_part2, orders_part2, order_line_part2, nation_part2 where	 c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and o_entry_d >= '2024-10-28 17:00:00' and o_entry_d <= ol_delivery_d and n_nationkey = ascii(substr(c_state,1,1)) group by c_id, c_last, c_city, c_phone, n_name order by revenue desc;
select	 s_i_id, sum(s_order_cnt) as ordercount from	 stock_part2, supplier_part2, nation_part2 where	 mod((s_w_id * s_i_id),10000) = s_suppkey and s_nationkey = n_nationkey and n_name = 'germany' group by s_i_id having   sum(s_order_cnt) >(select sum(s_order_cnt) * 0.005 from stock_part2, supplier_part2, nation_part2 where mod((s_w_id * s_i_id),10000) = s_suppkey and s_nationkey = n_nationkey and n_name = 'germany') order by ordercount desc;
select	 o_ol_cnt, sum(case when o_carrier_id = 1 or o_carrier_id = 2 then 1 else 0 end) as high_line_count, sum(case when o_carrier_id <> 1 and o_carrier_id <> 2 then 1 else 0 end) as low_line_count from	 orders_part2, order_line_part2 where	 ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and o_entry_d <= ol_delivery_d and ol_delivery_d < '2025-10-23 17:00:00' group by o_ol_cnt order by o_ol_cnt;
select c_count, count(*) as custdist from (select c.c_id, count(o.o_id) as c_count from customer_part2 c left join orders_part2 o on c.c_w_id = o.o_w_id and c.c_d_id = o.o_d_id and c.c_id = o.o_c_id and o.o_carrier_id > 8 group by c.c_id) as c_orders group by c_count order by custdist desc, c_count desc;
select 100.00 * sum(case when i.i_data like 'pr%' then ol.ol_amount else 0 end) / nullif(sum(ol.ol_amount), 0) as promo_revenue from order_line_part2 ol join item_part2 i on ol.ol_i_id = i.i_id where ol.ol_delivery_d >= '2024-10-28 17:00:00' and ol.ol_delivery_d < '2025-10-23 17:00:00';
with revenue as (select mod((st.s_w_id * st.s_i_id), 10000) as supplier_no,sum(ol.ol_amount) as total_revenue from order_line_part2 ol join stock_part2 st on ol.ol_i_id = st.s_i_id and ol.ol_supply_w_id = st.s_w_id where ol.ol_delivery_d >= '2024-10-28 17:00:00' group by mod((st.s_w_id * st.s_i_id), 10000))select s.s_suppkey, s.s_name, s.s_address, s.s_phone, r.total_revenue from supplier_part2 s join revenue r on s.s_suppkey = r.supplier_no where r.total_revenue = (select max(total_revenue) from revenue) order by s.s_suppkey;
select i.i_name,substr(i.i_data, 1, 3) as brand,i.i_price,count(distinct mod((st.s_w_id * st.s_i_id), 10000)) as supplier_cnt from stock_part2 st join item_part2 i on i.i_id = st.s_i_id where i.i_data not like 'zz%' and mod((st.s_w_id * st.s_i_id), 10000) not in (select s.s_suppkey from supplier_part2 s where s.s_comment like '%bad%') group by i.i_name, substr(i.i_data, 1, 3), i.i_price order by supplier_cnt desc;
select sum(ol.ol_amount) / 2.0 as avg_yearly from order_line_part2 ol join (select i.i_id, avg(ol.ol_quantity) as a from order_line_part2 ol join item_part2 i on ol.ol_i_id = i.i_id group by i.i_id) as t on ol.ol_i_id = t.i_id where ol.ol_quantity < t.a;
select	 c_last, c_id o_id, o_entry_d, o_ol_cnt, sum(ol_amount) from	 customer_part2, orders_part2, order_line_part2 where	 c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id group by o_id, o_w_id, o_d_id, c_id, c_last, o_entry_d, o_ol_cnt having	 sum(ol_amount) > 200 order by sum(ol_amount) desc, o_entry_d;
select sum(ol.ol_amount) as revenue from order_line_part2 ol join item_part2 i on ol.ol_i_id = i.i_id where ol.ol_quantity >= 1 and ol.ol_quantity <= 10 and i.i_price between 1 and 400000 and ((i.i_data like '%a' and ol.ol_w_id in (1, 2, 3)) or (i.i_data like '%b' and ol.ol_w_id in (1, 2, 4)) or (i.i_data like '%c' and ol.ol_w_id in (1, 5, 3)));
select s_name, s_address from supplier_part2, nation_part2 where s_suppkey in (select mod(s.s_i_id * s.s_w_id, 10000) from stock_part2 s join order_line_part2 ol on s.s_i_id = ol.ol_i_id where s.s_i_id in (select i.i_id from item_part2 i where i.i_data like 'co%') and ol.ol_delivery_d > '2024-10-28 17:00:00' group by s.s_i_id, s.s_w_id, s.s_quantity having 2 * s.s_quantity > sum(ol.ol_quantity)) and s_nationkey = n_nationkey and n_name = 'germany' order by s_name;
select s.s_name, count(*) as numwait from supplier_part2 s join stock_part2 st on s.s_suppkey = mod((st.s_w_id * st.s_i_id), 10000) join order_line_part2 l1 on l1.ol_i_id = st.s_i_id and l1.ol_w_id = st.s_w_id join orders_part2 o on l1.ol_o_id = o.o_id join nation_part2 n on s.s_nationkey = n.n_nationkey where l1.ol_delivery_d > o.o_entry_d and not exists (select * from order_line_part2 l2 where l2.ol_o_id = l1.ol_o_id and l2.ol_w_id = l1.ol_w_id and l2.ol_d_id = l1.ol_d_id and l2.ol_delivery_d > l1.ol_delivery_d) and n.n_name = 'germany' group by s.s_name order by numwait desc, s.s_name;
select substr(c.c_state, 1, 1) as country,count(*) as numcust, sum(c.c_balance) as totacctbal from customer_part2 c where substr(c.c_phone, 1, 1) in ('1', '2', '3', '4', '5', '6', '7') and c.c_balance > (select avg(c2.c_balance) from customer_part2 c2 where c2.c_balance > 0.00 and substr(c2.c_phone, 1, 1) in ('1', '2', '3', '4', '5', '6', '7'))and not exists (select * from orders_part2 o where o.o_c_id = c.c_id and o.o_w_id = c.c_w_id and o.o_d_id = c.c_d_id) group by substr(c.c_state, 1, 1) order by substr(c.c_state, 1, 1);
