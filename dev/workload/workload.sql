select   ol_number,  sum(ol_quantity) as sum_qty,  sum(ol_amount) as sum_amount,  avg(ol_quantity) as avg_qty,  avg(ol_amount) as avg_amount,  count(*) as count_order from order_line where ol_delivery_d > '{}' group by ol_number order by ol_number;
SELECT su.s_suppkey, su.s_name, n.n_name, i.i_id, i.i_name, su.s_address, su.s_phone, su.s_comment FROM item AS i JOIN stock AS s ON i.i_id = s.s_i_id JOIN supplier AS su ON MOD((s.s_w_id * s.s_i_id), 10000) = su.s_suppkey JOIN nation AS n ON su.s_nationkey = n.n_nationkey JOIN region AS r ON n.n_regionkey = r.r_regionkey JOIN (SELECT s_sub.s_i_id AS m_i_id, MIN(s_sub.s_quantity) AS m_s_quantity FROM stock AS s_sub JOIN supplier AS su_sub ON MOD((s_sub.s_w_id * s_sub.s_i_id), 10000) = su_sub.s_suppkey JOIN nation AS n_sub ON su_sub.s_nationkey = n_sub.n_nationkey JOIN region AS r_sub ON n_sub.n_regionkey = r_sub.r_regionkey WHERE r_sub.r_name LIKE 'EUROP%' GROUP BY s_sub.s_i_id) AS m ON i.i_id = m.m_i_id AND s.s_quantity = m.m_s_quantity WHERE i.i_data LIKE '%b' AND r.r_name LIKE 'EUROP%' ORDER BY n.n_name, su.s_name, i.i_id;
select   ol_o_id, ol_w_id, ol_d_id,sum(ol_amount) as revenue, o_entry_d from 	 customer, new_order, orders, order_line where 	 c_state like 'A%' and c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and no_w_id = o_w_id and no_d_id = o_d_id and no_o_id = o_id and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and o_entry_d > '{}' group by ol_o_id, ol_w_id, ol_d_id, o_entry_d order by revenue desc, o_entry_d;
SELECT o.o_ol_cnt, COUNT(*) AS order_count FROM orders o JOIN order_line ol ON o.o_id = ol.ol_o_id AND o.o_w_id = ol.ol_w_id AND o.o_d_id = ol.ol_d_id AND ol.ol_delivery_d >= o.o_entry_d WHERE o.o_entry_d >= '{}' AND o.o_entry_d < '{}' GROUP BY o.o_ol_cnt ORDER BY o.o_ol_cnt;
select n_name,  sum(ol_amount) as revenue from customer, orders, order_line, stock, supplier, nation, region where c_id = o_c_id  and c_w_id = o_w_id  and c_d_id = o_d_id  and ol_o_id = o_id  and ol_w_id = o_w_id  and ol_d_id=o_d_id  and ol_w_id = s_w_id  and ol_i_id = s_i_id  and mod((s_w_id * s_i_id),10000) = s_suppkey  and ascii(substr(c_state,1,1)) = s_nationkey  and s_nationkey = n_nationkey  and n_regionkey = r_regionkey  and r_name = 'EUROPE'  and o_entry_d >= '{}' group by n_name order by revenue desc;
select sum(ol_amount) as revenue from order_line where ol_delivery_d >= '{}' and ol_delivery_d < '{}' and ol_quantity between 1 and 100000;
SELECT s.s_nationkey AS supp_nation,SUBSTR(c.c_state, 1, 1) AS cust_nation,EXTRACT(YEAR FROM o.o_entry_d) AS l_year,SUM(ol.ol_amount) AS revenue FROM order_line as ol JOIN stock st ON ol.ol_supply_w_id = st.s_w_id and ol.ol_i_id = st.s_i_id JOIN orders o ON ol.ol_w_id = o.o_w_id AND ol.ol_d_id = o.o_d_id AND ol.ol_o_id = o.o_id JOIN customer c ON o.o_c_id = c.c_id AND o.o_w_id = c.c_w_id AND o.o_d_id = c.c_d_id JOIN supplier s ON mod((st.s_w_id * st.s_i_id), 10000) = s.s_suppkey JOIN nation n1 ON s.s_nationkey = n1.n_nationkey JOIN nation n2 ON ASCII(SUBSTR(c.c_state, 1, 1)) = n2.n_nationkey WHERE MOD((st.s_w_id * st.s_i_id), 10000) = s.s_suppkey AND ((n1.n_name = 'GERMANY' AND n2.n_name = 'CANADA') OR (n1.n_name = 'CANADA' AND n2.n_name = 'GERMANY')) AND o.o_entry_d BETWEEN '{}' AND '{}' GROUP BY s.s_nationkey,SUBSTR(c.c_state, 1, 1), EXTRACT(YEAR FROM o.o_entry_d) ORDER BY s.s_nationkey,cust_nation, l_year;
select extract(year from o_entry_d) as l_year,sum(case when n2.n_name = 'GERMANY' then ol_amount else 0 end) / sum(ol_amount) as mkt_share from	 item, supplier, stock, order_line, orders, customer, nation n1, nation n2, region where	 i_id = s_i_id and ol_i_id = s_i_id and ol_supply_w_id = s_w_id and mod((s_w_id * s_i_id),10000) = s_suppkey and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and n1.n_nationkey = ascii(substr(c_state,1,1)) and n1.n_regionkey = r_regionkey and ol_i_id < 1000 and r_name = 'EUROPE' and s_nationkey = n2.n_nationkey and o_entry_d between '{}' and '{}' and i_data like '%b' and i_id = ol_i_id group by extract(year from o_entry_d) order by l_year;
select	 n_name, extract(year from o_entry_d) as l_year, sum(ol_amount) as sum_profit from	 item, stock, supplier, order_line, orders, nation where	 ol_i_id = s_i_id and ol_supply_w_id = s_w_id and mod((s_w_id * s_i_id), 10000) = s_suppkey and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and ol_i_id = i_id and s_nationkey = n_nationkey and i_data like '%BB' group by n_name, extract(year from o_entry_d) order by n_name, l_year desc;
select	 c_id, c_last, sum(ol_amount) as revenue, c_city, c_phone, n_name from	 customer, orders, order_line, nation where	 c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and o_entry_d >= '{}' and o_entry_d <= ol_delivery_d and n_nationkey = ascii(substr(c_state,1,1)) group by c_id, c_last, c_city, c_phone, n_name order by revenue desc;
select	 s_i_id, sum(s_order_cnt) as ordercount from	 stock, supplier, nation where	 mod((s_w_id * s_i_id),10000) = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' group by s_i_id having   sum(s_order_cnt) >(select sum(s_order_cnt) * 0.005 from stock, supplier, nation where mod((s_w_id * s_i_id),10000) = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY') order by ordercount desc;
select	 o_ol_cnt, sum(case when o_carrier_id = 1 or o_carrier_id = 2 then 1 else 0 end) as high_line_count, sum(case when o_carrier_id <> 1 and o_carrier_id <> 2 then 1 else 0 end) as low_line_count from	 orders, order_line where	 ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id and o_entry_d <= ol_delivery_d and ol_delivery_d < '{}' group by o_ol_cnt order by o_ol_cnt;
SELECT c_count, COUNT(*) AS custdist FROM (SELECT c.c_id, COUNT(o.o_id) AS c_count FROM customer c LEFT JOIN orders o ON c.c_w_id = o.o_w_id AND c.c_d_id = o.o_d_id AND c.c_id = o.o_c_id AND o.o_carrier_id > 8 GROUP BY c.c_id) AS c_orders GROUP BY c_count ORDER BY custdist DESC, c_count DESC;
SELECT 100.00 * SUM(CASE WHEN i.i_data LIKE 'PR%' THEN ol.ol_amount ELSE 0 END) / NULLIF(SUM(ol.ol_amount), 0) AS promo_revenue FROM order_line ol JOIN item i ON ol.ol_i_id = i.i_id WHERE ol.ol_delivery_d >= '{}' AND ol.ol_delivery_d < '{}';
WITH revenue AS (SELECT MOD((st.s_w_id * st.s_i_id), 10000) AS supplier_no,SUM(ol.ol_amount) AS total_revenue FROM order_line ol JOIN stock st ON ol.ol_i_id = st.s_i_id AND ol.ol_supply_w_id = st.s_w_id WHERE ol.ol_delivery_d >= '{}' GROUP BY MOD((st.s_w_id * st.s_i_id), 10000))SELECT s.s_suppkey, s.s_name, s.s_address, s.s_phone, r.total_revenue FROM supplier s JOIN revenue r ON s.s_suppkey = r.supplier_no WHERE r.total_revenue = (SELECT MAX(total_revenue) FROM revenue) ORDER BY s.s_suppkey;
SELECT i.i_name,SUBSTR(i.i_data, 1, 3) AS brand,i.i_price,COUNT(DISTINCT MOD((st.s_w_id * st.s_i_id), 10000)) AS supplier_cnt FROM stock st JOIN item i ON i.i_id = st.s_i_id WHERE i.i_data NOT LIKE 'zz%' AND MOD((st.s_w_id * st.s_i_id), 10000) NOT IN (SELECT s.s_suppkey FROM supplier s WHERE s.s_comment LIKE '%bad%') GROUP BY i.i_name, SUBSTR(i.i_data, 1, 3), i.i_price ORDER BY supplier_cnt DESC;
SELECT SUM(ol.ol_amount) / 2.0 AS avg_yearly FROM order_line ol JOIN (SELECT i.i_id, AVG(ol.ol_quantity) AS a FROM order_line ol JOIN item i ON ol.ol_i_id = i.i_id GROUP BY i.i_id) AS t ON ol.ol_i_id = t.i_id WHERE ol.ol_quantity < t.a;
select	 c_last, c_id o_id, o_entry_d, o_ol_cnt, sum(ol_amount) from	 customer, orders, order_line where	 c_id = o_c_id and c_w_id = o_w_id and c_d_id = o_d_id and ol_w_id = o_w_id and ol_d_id = o_d_id and ol_o_id = o_id group by o_id, o_w_id, o_d_id, c_id, c_last, o_entry_d, o_ol_cnt having	 sum(ol_amount) > 200 order by sum(ol_amount) desc, o_entry_d;
SELECT SUM(ol.ol_amount) AS revenue FROM order_line ol JOIN item i ON ol.ol_i_id = i.i_id WHERE ol.ol_quantity >= 1 AND ol.ol_quantity <= 10 AND i.i_price BETWEEN 1 AND 400000 AND ((i.i_data LIKE '%a' AND ol.ol_w_id IN (1, 2, 3)) OR (i.i_data LIKE '%b' AND ol.ol_w_id IN (1, 2, 4)) OR (i.i_data LIKE '%c' AND ol.ol_w_id IN (1, 5, 3)));
SELECT s_name, s_address FROM supplier, nation WHERE s_suppkey IN (SELECT mod(s.s_i_id * s.s_w_id, 10000) FROM stock s JOIN order_line ol ON s.s_i_id = ol.ol_i_id WHERE s.s_i_id IN (SELECT i.i_id FROM item i WHERE i.i_data LIKE 'co%') AND ol.ol_delivery_d > '{}' GROUP BY s.s_i_id, s.s_w_id, s.s_quantity HAVING 2 * s.s_quantity > SUM(ol.ol_quantity)) AND s_nationkey = n_nationkey AND n_name = 'GERMANY' ORDER BY s_name;
SELECT s.s_name, COUNT(*) AS numwait FROM supplier s JOIN stock st ON s.s_suppkey = MOD((st.s_w_id * st.s_i_id), 10000) JOIN order_line l1 ON l1.ol_i_id = st.s_i_id AND l1.ol_w_id = st.s_w_id JOIN orders o ON l1.ol_o_id = o.o_id JOIN nation n ON s.s_nationkey = n.n_nationkey WHERE l1.ol_delivery_d > o.o_entry_d AND NOT EXISTS (SELECT * FROM order_line l2 WHERE l2.ol_o_id = l1.ol_o_id AND l2.ol_w_id = l1.ol_w_id AND l2.ol_d_id = l1.ol_d_id AND l2.ol_delivery_d > l1.ol_delivery_d) AND n.n_name = 'GERMANY' GROUP BY s.s_name ORDER BY numwait DESC, s.s_name;
SELECT SUBSTR(c.c_state, 1, 1) AS country,COUNT(*) AS numcust, SUM(c.c_balance) AS totacctbal FROM customer c WHERE SUBSTR(c.c_phone, 1, 1) IN ('1', '2', '3', '4', '5', '6', '7') AND c.c_balance > (SELECT AVG(c2.c_balance) FROM customer c2 WHERE c2.c_balance > 0.00 AND SUBSTR(c2.c_phone, 1, 1) IN ('1', '2', '3', '4', '5', '6', '7'))AND NOT EXISTS (SELECT * FROM orders o WHERE o.o_c_id = c.c_id AND o.o_w_id = c.c_w_id AND o.o_d_id = c.c_d_id) GROUP BY SUBSTR(c.c_state, 1, 1) ORDER BY SUBSTR(c.c_state, 1, 1);
